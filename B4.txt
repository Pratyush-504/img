import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home:SafeArea(
      child:Scaffold(
        body:QuizPage(),
      ),
    ),
  ));
}


class Question{
  final String questionText;
  final bool answer;

  Question({required this.questionText, required this.answer});
}


class Questions{
  List<Question>questionBank=[
    Question(questionText: "3<2", answer: false),
    Question(questionText: "1<10", answer: true),
    Question(questionText: "5<3", answer: false),
    Question(questionText: "5*2=10", answer: true),
    Question(questionText: "10>7", answer: true),
    Question(questionText: "6/3=4", answer: false),
  ];
}

class QuizPage extends StatefulWidget{
  const QuizPage ({Key?key}):super(key:key);
  @override
  _QuizPageState createState()=>_QuizPageState();
}


class _QuizPageState extends State<QuizPage>{
  int questionNumber=0;
  int currentScore=0;
  Questions questions=Questions();

  void updateQuestionNumber()
  {
    setState(() {
      questionNumber=questionNumber+1;
    });
  }

  void updateScore(bool choice, int question_number)
  {
    if(questions.questionBank.length==question_number)
      {
        print("End of Questions!");
      }
    else
      {
        if(questions.questionBank[question_number].answer==choice)
          {
            setState(() {
              currentScore++;
            });
          }
      }
  }

  bool checkQuestionNumber(int questionNumber)
  {
    return questionNumber<questions.questionBank.length?true:false;
  }


  Widget build(BuildContext context)
  {
    return Container(
      child: Column(
        children: [
          Center(
            child: Text( checkQuestionNumber(questionNumber)? questions.questionBank[questionNumber].questionText.toString(): "End",
            style: TextStyle(fontSize: 40, ),),
          ),

          SizedBox(height: 20,),

          if(checkQuestionNumber(questionNumber))
            ElevatedButton(onPressed:()
              {setState(() {
                if(questionNumber==questions.questionBank.length)
                  {
                    print("end of questions");
                  }
                else
                  {
                    updateScore(true, questionNumber);
                    updateQuestionNumber();
                  }
              });}, child: Text('True',),),

          SizedBox(width: 20,),


          if(checkQuestionNumber(questionNumber))
            ElevatedButton(onPressed:(){
              setState(() {
                if(questionNumber==questions.questionBank.length)
                  {
                    print("End of questions");
                  }
                else
                  {
                    updateScore(false, questionNumber);
                    updateQuestionNumber();
                  }
              });
            }, child: Text('False',),),


          SizedBox(height: 100,),

          SizedBox(height: 50,),
          
          Padding(
            padding: const EdgeInsets.all(30.0),
            child:Center(
              child:Text(
                "Currentscore is: ",
                style: TextStyle(fontSize: 30,),
              ),
            ),
          ),


          Padding(
            padding: const EdgeInsets.all(30.0),
            child: Center(
              child: Text(
                 '${currentScore}',
                style: TextStyle(fontSize: 30),
              ),
            ),
          ),

        ]
      ),
    );
  }


}
